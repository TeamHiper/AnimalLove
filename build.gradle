plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.animal'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	// h2 database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Cloudinary Java SDK
	implementation 'com.cloudinary:cloudinary-http5:2.0.0'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	// spring security oauth2 client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	// QueryDSL APT- JPAAnnotationProcessor 사용 지정
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

	// QueryDSL 관련 NoClassDefFoundError 방지용 annotationProcessor 추가
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}



// QueryDSL 관련 START
def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
// QueryDSL 관련 END



tasks.named('test') {
	useJUnitPlatform()
}
